/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    Game: {
      address: "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      abi: [
        {
          inputs: [
            {
              internalType: "address payable",
              name: "_player1",
              type: "address",
            },
            {
              internalType: "address payable",
              name: "_player2",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_betAmount",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "betAmount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "commitment",
              type: "bytes32",
            },
          ],
          name: "commitMove",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "forfeit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "gameState",
          outputs: [
            {
              internalType: "enum Game.GameState",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "enum Game.Move",
              name: "move",
              type: "uint8",
            },
            {
              internalType: "string",
              name: "secret",
              type: "string",
            },
          ],
          name: "generateCommitment",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "players",
          outputs: [
            {
              internalType: "address payable",
              name: "addr",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "commitment",
              type: "bytes32",
            },
            {
              internalType: "enum Game.Move",
              name: "move",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "revealDeadline",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "enum Game.Move",
              name: "move",
              type: "uint8",
            },
            {
              internalType: "string",
              name: "secret",
              type: "string",
            },
          ],
          name: "revealMove",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "viewWinner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  11155111: {
    Game: {
      address: "0x9F5Ad11Cc4B0E73dF7BA1cB06Fc1adc45C449c2E",
      abi: [
        {
          inputs: [
            {
              internalType: "address payable",
              name: "_player1",
              type: "address",
            },
            {
              internalType: "address payable",
              name: "_player2",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_betAmount",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "betAmount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "commitment",
              type: "bytes32",
            },
          ],
          name: "commitMove",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "forfeit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "gameState",
          outputs: [
            {
              internalType: "enum Game.GameState",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "enum Game.Move",
              name: "move",
              type: "uint8",
            },
            {
              internalType: "string",
              name: "secret",
              type: "string",
            },
          ],
          name: "generateCommitment",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "players",
          outputs: [
            {
              internalType: "address payable",
              name: "addr",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "commitment",
              type: "bytes32",
            },
            {
              internalType: "enum Game.Move",
              name: "move",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "revealDeadline",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "enum Game.Move",
              name: "move",
              type: "uint8",
            },
            {
              internalType: "string",
              name: "secret",
              type: "string",
            },
          ],
          name: "revealMove",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "viewWinner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
